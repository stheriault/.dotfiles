#!/bin/bash

# this function shortens a long path to less than a desired number of characters
# by shortening the directory names to one character.  for example,
# /tmp/this/is/a/long/path/name/yada/Yada may become /t/t/i/a/l/p/name/yada/Yada

# default values for number of chars to shortent to and the path to shorten
path=$(pwd)
maxChars=40

# parse the commandline inputs
while [[ $# > 0 ]]
do
  key="$1"
  shift

  case $key in
    -h|--help)
      #print usage info
      echo "Usage: shortenPath [-n N] [path]"
      exit
      ;;
    -n)
      maxChars="$1"
      shift
      ;;
    *)  # this is the path
      path=$key
    esac
done


# shorten then home direectory to ~
path=$(echo $path | sed -e "s!$HOME!~!");

# recuresively shorten the directories starting from the left, until the number
# of chars in the path is less than maxChars

function makeShorter()
{
  maxChars=$1
  shift

  IFS=' '
  remain=$*


  if (( ${#remain} > "$maxChars" )); then
    shortened=$(echo $remain | sed -re "s!([^/])[^/]{1,}/!\1/!")
    if [[ $remain == $shortened ]]; then
      echo -en $remain
    else
      echo -en $(makeShorter $maxChars "$shortened")
    fi
    #echo -en $shortened
  else
    echo -en "$remain"
  fi
}

makeShorter $maxChars $path

# syntax=bash
